  <FormField
        name="credentials.attachments"
        control={control}
        render={({ field }) => (
          <Dragger
            beforeUpload={() => false}
            action=""
            listType="picture"
            accept=".pdf,.png,.doc,.docx"
            multiple={false}
            className="inventory-upload !font-satoshi"
            onChange={handleOnchange}
            onRemove={handleRemove}
            fileList={field.value || []}
            itemRender={(_originNode, file) => (
              <div
                key={file.uid}
                className="my-2 flex items-center gap-x-6 rounded-[15px] p-3.5"
              >
                {file.thumbUrl ? (
                  <img
                    src={file.thumbUrl}
                    alt={file.name}
                    className="default-thumbnail h-12 w-10"
                  />
                ) : (
                  <img src="/assets/images/pdfIcon.png" width={20} />
                )}
                <div className="flex w-full flex-col justify-between gap-2 sm:flex-row sm:items-center">
                  <div className="flex flex-col">
                    <div className="s">
                      <p className="truncate text-base font-bold text-black">
                        {file.name}
                      </p>
                    </div>
                    {file.status === "uploading" &&
                      file.percent !== undefined && (
                        <Progress
                          percent={file.percent}
                          className="custom-progress"
                          strokeWidth={10}
                        />
                      )}
                  </div>

                  <div className="flex items-center gap-2">
                    <Button
                      variant="none"
                      type="button"
                      className="!p-0"
                      onClick={() => handleRemove(file)}
                    >
                      <img
                        src={`/assets/icons/bin.svg`}
                        width={20}
                        alt="delete-icon"
                      />
                    </Button>
                    {/* <button type="button">
                      <ArrowDownTrayIcon className="size-5" />
                    </button> */}
                  </div>
                </div>
              </div>
            )}
          >
            {/* <div className="flex flex-col items-center gap-y-4">
        <div className="inline-flex rounded-full bg-[#F0F2F5] w-14 h-14 justify-center items-center">
          <img
            src={`/assets/icons/cloud-upload.svg`}
            alt="upload-icon"
            width={28}
            className="object-cover"
          />
        </div>
        <div className="flex flex-col gap-y-4 items-center">
          <div>
            <p className="text-sm font-medium leading-default text-deep-grey">
              <span className="text-primary-blue">Click to upload</span> or
              drag and drop
            </p>
            <p className="leading-[17.4px] text-placeholder text-xs">
              SVG, PNG, JPG or GIF (max. 800x400px)
            </p>
          </div>
          <div className="flex items-center gap-x-2">
            <hr className="bg-[#F0F2F5] w-full h-[1px]" />
            <p>OR</p>
            <hr className="bg-[#F0F2F5] w-full h-[1px]" />
          </div>
          <Button type="button" variant="primary">
            Browse Files
          </Button>
        </div>
      </div> */}

            {attachments?.length < 1 ? (
              <div className="flex flex-col items-center gap-y-4 ">
                <div className="inline-flex h-14 w-14 items-center justify-center rounded-full bg-[#F0F2F5]">
                  <img
                    src={`/assets/icons/cloud-upload.svg`}
                    alt="upload-icon"
                    width={28}
                    className="object-cover"
                  />
                </div>
                <div className="flex flex-col items-center gap-y-4">
                  <div>
                    <p className="text-sm font-medium leading-default text-deep-grey">
                      <span className="text-primary-blue">Click to upload</span>{" "}
                      or drag and drop
                    </p>
                    <p className="text-xs leading-[17.4px] text-placeholder">
                      SVG, PNG, JPG or GIF (max. 800x400px)
                    </p>
                  </div>
                  <div className="flex items-center gap-x-2">
                    <Separator
                      className="w-[100px] bg-[#F0F2F5]"
                      orientation="horizontal"
                    />
                    <p>OR</p>
                    <Separator
                      className="w-[100px] bg-[#F0F2F5]"
                      orientation="horizontal"
                    />
                  </div>
                  <Button type="button" variant="primary">
                    Browse Files
                  </Button>
                </div>
              </div>
            ) : (
              // attachment uploaded
              attachments.slice(0, 1).map((image: AttachmentData) => (
                <div
                  className="uploaded-attachment flex flex-col items-center  gap-y-4"
                  key={image.uid}
                >
                  <div className="inline-flex h-14 w-14 items-center justify-center rounded-full bg-[#E7F6EC]">
                    <img
                      src={`/assets/icons/check-circle-green.svg`}
                      alt="upload-icon"
                      width={38}
                      className="object-cover"
                    />
                  </div>
                  <div className="flex flex-col items-center gap-y-4">
                    <div>
                      <p className="text-sm font-bold leading-default text-[#1D2739]">
                        Uploading Document...
                      </p>
                      <p className="text-xs leading-[17.4px] text-placeholder">
                        {image.name}
                      </p>
                    </div>

                    {/* <Button type="button" variant="none">
                                <img src={`/assets/icons/bin-icon.svg`}  alt='delete-attchment-icon'/>
                                    Cancel Upload
                              </Button> */}
                  </div>
                </div>
              ))

              // <p>Uploaded</p>
            )}
          </Dragger>
        )}
      />




       {
                  previewFile ? (
                    <div className="bg-[#00000033] h-[200px] w-full flex items-center justify-center  rounded-3xl relative">
                      <div className=" h-[240px] w-[240px] rounded-4xl border-4 border-[#24A0B5] bg-[#0E464F] p-6 flex items-center justify-center flex-col">
                        <img
                          src={previewFile?.thumbUrl}
                          alt="preview"
                          className="h-full w-full"
                        />
                      </div>
                    </div>
                  ) : (
                    <div className="bg-[#00000033] h-[200px] w-full flex items-center justify-center  rounded-3xl relative">
                      <div className=" h-[240px] w-[240px] rounded-4xl border-4 border-[#24A0B5] bg-[#0E464F] p-6 flex items-center justify-center flex-col">
                        <CloudDownloadIcon />
                        <p className="text-[#FAFAFA] font-roboto font-normal leading-6 pb-2 text-center">
                          Drag & drop or click to upload
                        </p>
                      </div>
                    </div>
                  )
         
                }


   {/* <div
                    key={attachments[0]?.uid}
                    className=" h-[240px] w-[240px] rounded-4xl border-4 border-[#24A0B5] bg-[#0E464F] p-6 flex items-center justify-center flex-col object-cover"
                  >
                    <div
                      className="h-full w-full object-cover"
                      style={{
                        backgroundImage: `url(${attachments[0].thumbUrl})`,
                      }}
                    ></div>
                  </div> */}



                      // attachments.forEach((file) => {
    //     attachmentFormData.append("file", file.originFileObj as Blob);
    //   });
    // attachmentFormData.append('cloud-url', CLOUDINARY_URL)


       // <div className="fixed z-10  bg-black/50 flex flex-col items-center justify-center top-0 left-0 right-0 bottom-0">
        //   {/* <Progress type="circle" percent={progress} size={50} /> */}
        // </div>


        <div className="grid gap-y-2">
            <p className="text-center text-[34px] font-normal leading-[30px] text-[#FAFAFA] !font-roadrage ">
              Techember Fest ‚Äù25
            </p>
            <p className=" text-[10px] leading-3 font-normal font-roboto text-[#FAFAFA] text-center ">
              üìç 04 Rumens road, Ikoyi, Lagos
            </p>
            <p className="text-[10px] leading-3 font-normal font-roboto text-[#FAFAFA] text-center">
              üìÖ March 15, 2025 | 7:00 PM
            </p>
          </div>

         